// Mocks generated by Mockito 5.4.4 from annotations
// in frontend/test/data/repositories/car_repository_impl/car_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:frontend/data/datasources/remote_car_data_source.dart' as _i4;
import 'package:frontend/domain/entities/car.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCar_1 extends _i1.SmartFake implements _i3.Car {
  _FakeCar_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteCarDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteCarDataSource extends _i1.Mock
    implements _i4.RemoteCarDataSource {
  MockRemoteCarDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i5.Future<List<_i3.Car>> getCars() => (super.noSuchMethod(
        Invocation.method(
          #getCars,
          [],
        ),
        returnValue: _i5.Future<List<_i3.Car>>.value(<_i3.Car>[]),
      ) as _i5.Future<List<_i3.Car>>);

  @override
  _i5.Future<_i3.Car> createCar(
    String? name,
    String? model,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #createCar,
          [
            name,
            model,
          ],
        ),
        returnValue: _i5.Future<_i3.Car>.value(_FakeCar_1(
          this,
          Invocation.method(
            #createCar,
            [
              name,
              model,
            ],
          ),
        )),
      ) as _i5.Future<_i3.Car>);

  @override
  _i5.Future<void> updateCar(
    int? id,
    String? name,
    String? model,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateCar,
          [
            id,
            name,
            model,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteCar(int? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteCar,
          [id],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
